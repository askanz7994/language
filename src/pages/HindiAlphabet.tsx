
import { Link } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { ArrowLeft } from "lucide-react";
import { useState } from "react";

const HindiAlphabet = () => {
  const [playingAudio, setPlayingAudio] = useState<number | null>(null);

  const vowels = [
    { letter: "‡§Ö", name: "A", pronunciation: "/…ô/", example: "‡§Ö‡§¨ (Ab) - Now" },
    { letter: "‡§Ü", name: "Aa", pronunciation: "/aÀê/", example: "‡§Ü‡§Æ (Aam) - Mango" },
    { letter: "‡§á", name: "I", pronunciation: "/…™/", example: "‡§á‡§ß‡§∞ (Idhar) - Here" },
    { letter: "‡§à", name: "Ee", pronunciation: "/iÀê/", example: "‡§à‡§ñ (Eekh) - Sugarcane" },
    { letter: "‡§â", name: "U", pronunciation: "/ ä/", example: "‡§â‡§≤‡•ç‡§≤‡•Ç (Ullu) - Owl" },
    { letter: "‡§ä", name: "Oo", pronunciation: "/uÀê/", example: "‡§ä‡§® (Oon) - Wool" },
    { letter: "‡§ã", name: "Ru", pronunciation: "/r…™/", example: "‡§ã‡§∑‡§ø (Rishi) - Sage" },
    { letter: "‡§è", name: "E", pronunciation: "/eÀê/", example: "‡§è‡§ï (Ek) - One" },
    { letter: "‡§ê", name: "Ai", pronunciation: "/…õÀê/", example: "‡§ê‡§∏‡§æ (Aisa) - Such" },
    { letter: "‡§ì", name: "O", pronunciation: "/oÀê/", example: "‡§ì‡§∞ (Or) - Side" },
    { letter: "‡§î", name: "Au", pronunciation: "/…îÀê/", example: "‡§î‡§∞ (Aur) - And" },
  ];

  const consonants = [
    { letter: "‡§ï", name: "Ka", pronunciation: "/k…ô/", example: "‡§ï‡§≤ (Kal) - Tomorrow" },
    { letter: "‡§ñ", name: "Kha", pronunciation: "/k ∞…ô/", example: "‡§ñ‡•Å‡§∂ (Khush) - Happy" },
    { letter: "‡§ó", name: "Ga", pronunciation: "/…°…ô/", example: "‡§ó‡§æ‡§®‡§æ (Gaana) - Song" },
    { letter: "‡§ò", name: "Gha", pronunciation: "/…° ±…ô/", example: "‡§ò‡§∞ (Ghar) - House" },
    { letter: "‡§ô", name: "Nga", pronunciation: "/≈ã…ô/", example: "‡§∞‡§Ç‡§ó (Rang) - Color" },
    { letter: "‡§ö", name: "Cha", pronunciation: "/tÕ° É…ô/", example: "‡§ö‡§≤ (Chal) - Walk" },
    { letter: "‡§õ", name: "Chha", pronunciation: "/tÕ° É ∞…ô/", example: "‡§õ‡§§ (Chhat) - Roof" },
    { letter: "‡§ú", name: "Ja", pronunciation: "/dÕ° í…ô/", example: "‡§ú‡§≤ (Jal) - Water" },
    { letter: "‡§ù", name: "Jha", pronunciation: "/dÕ° í ±…ô/", example: "‡§ù‡§Ç‡§°‡§æ (Jhanda) - Flag" },
    { letter: "‡§û", name: "Nja", pronunciation: "/…≤…ô/", example: "‡§ú‡•ç‡§û‡§æ‡§® (Gyaan) - Knowledge" },
    { letter: "‡§ü", name: "Ta", pronunciation: "/ à…ô/", example: "‡§ü‡§Æ‡§æ‡§ü‡§∞ (Tamatar) - Tomato" },
    { letter: "‡§†", name: "Tha", pronunciation: "/ à ∞…ô/", example: "‡§†‡§Ç‡§°‡§æ (Thanda) - Cold" },
    { letter: "‡§°", name: "Da", pronunciation: "/…ñ…ô/", example: "‡§°‡§æ‡§ï‡§ø‡§Ø‡§æ (Dakiya) - Postman" },
    { letter: "‡§¢", name: "Dha", pronunciation: "/…ñ ±…ô/", example: "‡§¢‡§ï‡•ç‡§ï‡§® (Dhakkan) - Lid" },
    { letter: "‡§£", name: "Na", pronunciation: "/…≥…ô/", example: "‡§ó‡•Å‡§£ (Gun) - Quality" },
    { letter: "‡§§", name: "Ta", pronunciation: "/tÃ™…ô/", example: "‡§§‡•Å‡§Æ (Tum) - You" },
    { letter: "‡§•", name: "Tha", pronunciation: "/tÃ™ ∞…ô/", example: "‡§•‡•à‡§≤‡§æ (Thaila) - Bag" },
    { letter: "‡§¶", name: "Da", pronunciation: "/dÃ™…ô/", example: "‡§¶‡§ø‡§® (Din) - Day" },
    { letter: "‡§ß", name: "Dha", pronunciation: "/dÃ™ ±…ô/", example: "‡§ß‡§® (Dhan) - Wealth" },
    { letter: "‡§®", name: "Na", pronunciation: "/n…ô/", example: "‡§®‡§æ‡§Æ (Naam) - Name" },
    { letter: "‡§™", name: "Pa", pronunciation: "/p…ô/", example: "‡§™‡§æ‡§®‡•Ä (Paani) - Water" },
    { letter: "‡§´", name: "Pha", pronunciation: "/p ∞…ô/", example: "‡§´‡§≤ (Phal) - Fruit" },
    { letter: "‡§¨", name: "Ba", pronunciation: "/b…ô/", example: "‡§¨‡§ö‡•ç‡§ö‡§æ (Bachcha) - Child" },
    { letter: "‡§≠", name: "Bha", pronunciation: "/b ±…ô/", example: "‡§≠‡§æ‡§à (Bhai) - Brother" },
    { letter: "‡§Æ", name: "Ma", pronunciation: "/m…ô/", example: "‡§Æ‡§æ‡§Å (Maan) - Mother" },
    { letter: "‡§Ø", name: "Ya", pronunciation: "/j…ô/", example: "‡§Ø‡§π‡§æ‡§Å (Yahan) - Here" },
    { letter: "‡§∞", name: "Ra", pronunciation: "/r…ô/", example: "‡§∞‡§æ‡§ú‡§æ (Raja) - King" },
    { letter: "‡§≤", name: "La", pronunciation: "/l…ô/", example: "‡§≤‡§°‡§º‡§ï‡§æ (Ladka) - Boy" },
    { letter: "‡§µ", name: "Va", pronunciation: "/ ã…ô/", example: "‡§µ‡§® (Van) - Forest" },
    { letter: "‡§∂", name: "Sha", pronunciation: "/ É…ô/", example: "‡§∂‡§π‡§∞ (Shahar) - City" },
    { letter: "‡§∑", name: "Sha", pronunciation: "/ Ç…ô/", example: "‡§∑‡§ü‡•ç‡§ï‡•ã‡§£ (Shatkona) - Hexagon" },
    { letter: "‡§∏", name: "Sa", pronunciation: "/s…ô/", example: "‡§∏‡§¨ (Sab) - All" },
    { letter: "‡§π", name: "Ha", pronunciation: "/…¶…ô/", example: "‡§π‡§Æ (Ham) - We" },
  ];

  const playAudio = (index: number) => {
    setPlayingAudio(index);
    setTimeout(() => setPlayingAudio(null), 1000);
  };

  return (
    <div className="min-h-screen blur-bg">
      <div className="container mx-auto px-4 py-16">
        <Link to="/learn-hindi" className="inline-flex items-center text-primary hover:text-primary/80 mb-8">
          <ArrowLeft className="mr-2 h-4 w-4" />
          Back to Hindi
        </Link>

        <div className="text-center mb-16">
          <h1 className="text-4xl md:text-5xl font-bold mb-6">Hindi Alphabet (‡§¶‡•á‡§µ‡§®‡§æ‡§ó‡§∞‡•Ä)</h1>
          <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
            Learn the Devanagari script with vowels and consonants
          </p>
        </div>

        {/* Vowels Section */}
        <div className="mb-16">
          <h2 className="text-3xl font-bold mb-8 text-center">Vowels (‡§∏‡•ç‡§µ‡§∞)</h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto">
            {vowels.map((vowel, index) => (
              <div key={index} className="number-card">
                <div className="flex items-center justify-between mb-4">
                  <div className="text-4xl font-bold text-primary">{vowel.letter}</div>
                  <Button
                    onClick={() => playAudio(index)}
                    className={`audio-button ${playingAudio === index ? 'animate-pulse' : ''}`}
                    size="sm"
                  >
                    üîä
                  </Button>
                </div>
                <div className="text-2xl mb-2 font-semibold">{vowel.name}</div>
                <div className="text-muted-foreground mb-3 italic">{vowel.pronunciation}</div>
                <div className="text-sm border-t border-border pt-3">
                  <strong>Example:</strong> {vowel.example}
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Consonants Section */}
        <div className="mb-16">
          <h2 className="text-3xl font-bold mb-8 text-center">Consonants (‡§µ‡•ç‡§Ø‡§Ç‡§ú‡§®)</h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto">
            {consonants.map((consonant, index) => (
              <div key={index} className="number-card">
                <div className="flex items-center justify-between mb-4">
                  <div className="text-4xl font-bold text-primary">{consonant.letter}</div>
                  <Button
                    onClick={() => playAudio(index + vowels.length)}
                    className={`audio-button ${playingAudio === index + vowels.length ? 'animate-pulse' : ''}`}
                    size="sm"
                  >
                    üîä
                  </Button>
                </div>
                <div className="text-2xl mb-2 font-semibold">{consonant.name}</div>
                <div className="text-muted-foreground mb-3 italic">{consonant.pronunciation}</div>
                <div className="text-sm border-t border-border pt-3">
                  <strong>Example:</strong> {consonant.example}
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default HindiAlphabet;
